---
openapi: "3.0.0"
info:
  title: Rayan GPS API Documentation
  version: 1.4.0
  description:
    This is `RayanGPS.com/Panel` APIs documentation You can find out more about
    AVL at [RayanGPS.com](http://rayangps.com)

servers:
  - url: http://localhost:2001/api
    description: localhost
  - url: https://api.rayangps.com/api
    description: HTTPS (Recommended)

tags:
  - name: Auth
    description: Authorization
    externalDocs:
      url: https://rayangps.com/panel/profile

  - name: Map
    description:
    externalDocs:
      url: https://rayangps.com/panel/

  - name: Users
    description: Operations on users information
    externalDocs:
      url: https://rayangps.com/panel/profile

  - name: Payment
    description: User payment request
    externalDocs:
      url: https://rayangps.com/panel/payment

  - name: Ticketing
    description: Ticketing system for users
    externalDocs:
      url: https://rayangps.com/panel/support/ticket

  - name: Report
    description: Report
    externalDocs:
      url: https://rayangps.com/panel/report

  - name: Tokens
    description: User session management
    externalDocs:
    url: https://rayangps.com/panel/settings

paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: Generates JWT token
      parameters:
        - in: header
          name: x-app-id
          schema:
            type: string
          required: true
          example: rayan_web
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
            example:
              username: "rayan_user"
              password: "Q?U73wVg"
      responses:
        "200":
          description: |-
            OK
          headers:
            x-auth-token:
              schema:
                type: string
              description: After successful login, the server sends a Jason Web Token (JWT) which you should use for routes that need authorization.
        "400":
          description: |-
            Bad request.
        "403":
          description: |-
            The username or password is incorrect

  /auth/logout:
    post:
      tags:
        - Auth
      operationId: postLogoutV1
      summary: dispose current user token
      security:
        - jwtAuth: []
      responses:
        "200":
          description: |-
            OK

  /map/latestCarState/{carId}:
    get:
      tags:
        - Map
      summary: Returns latest carState of given car ID
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: carId
          type: string
          required: true
      responses:
        "200":
          description: |-
            OK
        "400":
          description: |-
            Bad request.
        "403":
          description: |-
            The user has no permission to the requested car

  /map/traveledPath:
    post:
      tags:
        - Map
      summary: Returns array of carStates in Given timespan
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                carId:
                  type: array
                dateFrom:
                  type: string
                dateTo:
                  type: string
            example:
              carId: ["60e47de9c654e80449368e50"]
              dateFrom: "2021-09-28T07:30:00.000Z"
              dateTo: "2021-09-30T12:45:00.000Z"
              fullData: false
      responses:
        "200":
          description: |-
            OK
          content:
            application/json:
              examples:
                example1:
                  value:
                    [
                      {
                        "_id": "613dafc7f95f2c6fc4f3c91f",
                        "coordinates": [34.642318, 50.890318],
                        "postTime": "2021-09-12T07:44:05.000Z",
                        "carID": "5ca1c5171616cd086c10957b",
                      },
                      {
                        "_id": "613db0f2f95f2c6fc4f3d05b",
                        "coordinates": [34.642314, 50.890329],
                        "postTime": "2021-09-12T07:49:04.000Z",
                        "carID": "5ca1c5171616cd086c10957b",
                      },
                      {
                        "_id": "613db21ef95f2c6fc4f3d768",
                        "coordinates": [34.642338, 50.890346],
                        "postTime": "2021-09-12T07:54:03.000Z",
                        "carID": "5ca1c5171616cd086c10957b",
                      },
                      {
                        "_id": "613db348f95f2c6fc4f3de97",
                        "coordinates": [34.642311, 50.890276],
                        "postTime": "2021-09-12T07:59:02.000Z",
                        "carID": "5ca1c5171616cd086c10957b",
                      },
                    ]
                example2:
                  value:
                    [
                      {
                          "coordinates": [
                              35.728217,
                              51.149864
                          ],
                          "_id": "6152c9a25de3887b2a38489d",
                          "sigStatus": "1",
                          "speed": 0,
                          "postTime": "2021-09-28T07:51:38.000Z",
                          "powerBreaks": false,
                          "openHood": false,
                          "openDoors": false,
                          "openTrunk": false,
                          "switchOn": false,
                          "relocation": false,
                          "lowBattry": false,
                          "unauthorizedSpeed": false,
                          "highTemp": false,
                          "lowTemp": false,
                          "SOS": false,
                          "burglarAlarm": false,
                          "stop": true,
                          "hit": false,
                          "height": 1257,
                          "battery": 12.47,
                          "carID": "60e47de9c654e80449368e50"
                      },
                      {
                          "coordinates": [
                              35.728217,
                              51.149864
                          ],
                          "_id": "6152c9a65de3887b2a3848b0",
                          "sigStatus": "1",
                          "speed": 0,
                          "postTime": "2021-09-28T07:52:03.000Z",
                          "powerBreaks": false,
                          "openHood": false,
                          "openDoors": false,
                          "openTrunk": false,
                          "switchOn": false,
                          "relocation": false,
                          "lowBattry": false,
                          "unauthorizedSpeed": false,
                          "highTemp": false,
                          "lowTemp": false,
                          "SOS": false,
                          "burglarAlarm": false,
                          "stop": true,
                          "hit": false,
                          "height": 1257,
                          "battery": 12.4,
                          "carID": "60e47de9c654e80449368e50"
                      }
                    ]
        "400":
          description: |-
            Bad request.
        "403":
          description: |-
            The user has no permission to the requested car

  /user:
    get:
      tags:
        - Users
      operationId: getUserV1
      summary: returns authorized user information
      security:
        - jwtAuth: []
      responses:
        "200":
          description: |-
            OK
          content:
            application/json:
              examples:
                example1:
                  value:
                    {
                      "_id": "5cea9a1f69ceb503e8358119",
                      "company": "",
                      "fName": "Rayan",
                      "idCode": "",
                      "lName": "گروه مهندسی رایان داده",
                      "mobile": "09130399222",
                      "telephone": "",
                      "zipCode": "25",
                      "address": "",
                      "birthdate": "1990-07-05T20:30:00.000Z",
                      "accountBalance": 1000,
                    }
    put:
      tags:
        - Users
      operationId: putUserV1
      summary: updates authorized user information
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: userId
          required: false
          schema:
            $ref: "#/components/schemas/general/properties/objectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fName:
                  type: string
                lName:
                  type: string
                mobile:
                  type: string
                telephone:
                  type: string
                zipCode:
                  type: string
                address:
                  type: string
                birthdate:
                  type: object
            example:
              fName: Ali
              lName: Salehi
              mobile: 09130399222
              telephone: 02536662323
              address: azadi .st
              zipCode: 25
              birthdate: "1990-07-05T20:30:00.000Z"
      responses:
        "200":
          description: |-
            OK
        "403":
          description: |-
            currentPassword is not correct.

  /user/changePassword:
    post:
      tags:
        - Users
      operationId: postChangePasswordV1
      summary: Change user password
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
            example:
              currentPassword: "000000"
              newPassword: "123123"
      responses:
        "200":
          description: |-
            OK
        "403":
          description: |-
            currentPassword is not correct.
            
  /user/payDebtWithBalance:
    post:
      tags:
        - Users
      summary: Debt settlement
      security:
        - jwtAuth: []
      responses:
        "200":
          description: |-
            OK
        "400":
          description: |-
            user has no debt

  /payment/deposit:
    post:
      tags:
        - Payment
      operationId: postPeymentV1
      summary: returns bank terminal URL
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  summary: amount of money which user wants to deposit (in Rials), should be at least 10000
            example:
              amount: 10000
      responses:
        "200":
          description: |-
            OK
          content:
            application/json:
              examples:
                example1:
                  value:
                    {
                      "url": "https://bpm.shaparak.ir/pgwchannel/startpay.mellat?RefId=A5141D19DAF64F",
                    }
        "400":
          description: |-
            Bad request. "amount" property is required

  /ticket:
    get:
      tags:
        - Ticketing
      operationId: getAllTicketsV1
      summary: returns all user tickets
      security:
        - jwtAuth: []
      responses:
        "200":
          description: |-
            OK
          content:
            application/json:
              examples:
                example1:
                  value:
                    [
                      {
                        "_id": "5de6aae019e4c13034af050d",
                        "title": "تیکت 1",
                        "application": "rayan_web",
                        "priority": 0,
                        "status": 1,
                        "user":
                          {
                            "_id": "5cea9a1f69ceb503e8358119",
                            "username": "rayan",
                          },
                        "number": 1003,
                        "__v": 0,
                      },
                      {
                        "_id": "5de6a15719e4c13034af050b",
                        "title": "تیکت 2",
                        "car": "5c49eb7586900f14686e85a7",
                        "application": "rayan_web",
                        "priority": 0,
                        "status": 0,
                        "user":
                          {
                            "_id": "5cea9a1f69ceb503e8358119",
                            "username": "rayan",
                          },
                        "number": 1002,
                        "__v": 0,
                      },
                    ]
        "404":
          description: |-
            404 Not found any ticket

  /ticket/{ticketId}:
    get:
      tags:
        - Ticketing
      operationId: getTicketV1
      summary: returns specified ticket
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: ticketId
          required: true
          schema:
            $ref: "#/components/schemas/general/properties/objectId"
          description: The ticket ID
      responses:
        "200":
          description: |-
            OK
          content:
            application/json:
              examples:
                example1:
                  value:
                    {
                      "_id": "5de6aae019e4c13034af050d",
                      "title": "تیکت 1",
                      "application": "rayan_web",
                      "priority": 0,
                      "status": 1,
                      "user":
                        {
                          "_id": "5cea9a1f69ceb503e8358119",
                          "username": "rayan",
                        },
                      "number": 1003,
                      "__v": 0,
                    }
        "404":
          description: |-
            404 Ticket not found (For specified user)
    put: # --- API ---
      tags:
        - Ticketing
      operationId: closeTicketV1
      summary: Changes ticket status to close
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: ticketId
          required: true
          schema:
            $ref: "#/components/schemas/general/properties/objectId"
          description: The ticket ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                closeTicket:
                  type: boolean
            example:
              closeTicket: true
      responses:
        "200":
          description: |-
            OK
        "404":
          description: |-
            404 Ticket not found (For specified user)

  /ticket/new:
    post:
      tags:
        - Ticketing
      operationId: newTicketV1
      summary: Inserts new ticket
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
                priority:
                  $ref: "#/components/schemas/ticket/properties/priorities"
                application:
                  $ref: "#/components/schemas/general/properties/application_type"
                car:
                  $ref: "#/components/schemas/general/properties/objectId"
                text:
                  type: string
            example:
              title: عنوان تیکت/موضوع تیکت'
              priority: 0
              application: rayan_android
              car: 5db6a6383612da23a4e76a4e
              text: متن توضیحات تیکت
      responses:
        "200":
          description: |-
            OK
        "400":
          description: |-
            Bad request
  /ticket/newMessage:
    post:
      tags:
        - Ticketing
      operationId: newMessageV1
      summary: Inserts new ticket message
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ticketId:
                  $ref: "#/components/schemas/general/properties/objectId"
                text:
                  type: string
            example:
              ticketId: 5db6a6383612da23a4e76a4e
              text: متن توضیحات پیام
      responses:
        "200":
          description: |-
            OK
        "404":
          description: |-
            Ticket not found
        "400":
          description: |-
            Bad request

  /report/hourly:
    post:
      tags:
        - Report
      operationId: getReportv1
      summary: returns report data in hour/day/month
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: number
                  enum: [1, 2, 3]
                  description: "1: hourly (ساعتی) <br/> 2: daily (روزانه) <br/> 3: monthly (ماهانه)"
            example:
              type: 2
              car: 5ca1c5171616cd086c10957b
              endDate: "2020-10-25T20:29:59.999Z"
              startDate: "2020-10-22T20:30:00.000Z"
      responses:
        "200":
          description: |-
            OK
          content:
            application/json:
              examples:
                example1:
                  value:
                    {
                      "avgSpeed": 9.695652173913043,
                      "maxSpeed": 79,
                      "totalDistance": 25883,
                      "startDate": { "year": 2020, "day": 23, "month": 10 },
                      "totalStatus":
                        { "stop": 11472, "move": 91, "start": 25, "off": 25 },
                    }
        "403":
          description: |-
            access denied

  /token/:
    get:
      tags:
        - Tokens
      operationId: getTokenV1
      summary: Get valid tokens
      security:
        - jwtAuth: []
      responses:
        "200":
          description: |-
            OK
          content:
            application/json:
              examples:
                example1:
                  value:
                    [
                      {
                        "valid": true,
                        "_id": "5f9aac2a3b270220c8cf3df1",
                        "loginDate": "2020-10-29T11:48:44.687Z",
                        "user":
                          {
                            "_id": "5c210bdcac91d7258444bc3c",
                            "username": "saj",
                            "mobile": "09011100000",
                          },
                        "userType": "admin",
                        "application": "rayan_android",
                        "__v": 0,
                      },
                      {
                        "valid": true,
                        "_id": "5fa276934cc110053ccb6b60",
                        "user":
                          {
                            "_id": "5c210bdcac91d7258444bc3c",
                            "username": "saj",
                            "mobile": "09011100000",
                          },
                        "userType": "admin",
                        "application": "rayan_web",
                        "loginDate": "2020-11-04T09:38:27.000Z",
                        "__v": 0,
                      },
                    ]

  /token/dispose/{tokenId}:
    post:
      tags:
        - Tokens
      operationId: disposeTokenV1
      summary: dispose specified user token
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: tokenId
          required: true
          schema:
            $ref: "#/components/schemas/general/properties/objectId"
          description: Each jtw token have an id which uses for removing a token
      responses:
        "200":
          description: |-
            OK
        "404":
          description: |-
            Token not found

components:
  schemas:
    general:
      title: General
      type: object
      properties:
        application_type:
          type: string
          enum: [rayan_web, rayan_android]
          required: true
        objectId:
          type: string
          minimum: 24
          maximum: 24
    ticket:
      title: Ticket enums
      type: object
      properties:
        status:
          type: number
          enum: [0, 1, 2]
          required: true
          description: "0: userRespone (درحال بررسی) <br/> 1: operatorRespone (پاسخ داده شده) <br/> 3: closed (بسته شده)"
        priorities:
          type: number
          enum: [0, 1, 2]
          required: true
          description: "0: low (کم) <br/> 1: medium (متوسط) <br/> 3: high (زیاد)"

  securitySchemes:
    jwtAuth:
      type: apiKey
      in: header
      name: x-auth-token

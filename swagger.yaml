---
openapi: "3.0.0"
info:
  title: Rayan GPS API Documentation
  version: 1.2.0
  description:
    This is `RayanGPS.com/Panel` APIs documentation You can find out more about
    AVL at [RayanGPS.com](http://rayangps.com)

servers:
  - url: http://localhost:2001/api
    description: localhost
  - url: https://rayangps.com:3001/api
    description: HTTPS (Recommended)
  - url: http://rayangps.com:2001/api
    description: HTTP

tags:
  - name: Users
    description: Operations on users information
    externalDocs:
      url: https://rayangps.com/panel/profile

  - name: Payment
    description: User payment request
    externalDocs:
      url: https://rayangps.com/panel/payment

  - name: Ticketing
    description: Ticketing system for users
    externalDocs:
      url: https://rayangps.com/panel/support/ticket
      
  - name: Report
    description: Report
    externalDocs:
      url: https://rayangps.com/panel/report

paths:
  /user:
    get:
      tags:
        - Users
      operationId: getUserV1
      summary: returns authorized user information
      security:
        - jwtAuth: []
      responses:
        "200":
          description: |-
            OK
          content:
            application/json:
              examples:
                example1:
                  value:
                    {
                      "_id": "5cea9a1f69ceb503e8358119",
                      "company": "",
                      "fName": "Rayan",
                      "idCode": "",
                      "lName": "گروه مهندسی رایان داده",
                      "mobile": "09130399222",
                      "telephone": "",
                      "zipCode": "25",
                      "address": "",
                      "birthdate": "1990-07-05T20:30:00.000Z",
                      "accountBalance": 1000
                    }
    put:
      tags:
        - Users
      operationId: putUserV1
      summary: updates authorized user information
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: userId
          required: false
          schema:
            $ref: "#/components/schemas/general/properties/objectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fName:
                  type: string
                lName:
                  type: string
                mobile:
                  type: string
                telephone:
                  type: string
                zipCode:
                  type: string
                address:
                  type: string
                birthdate:
                  type: object
                currentPassword:
                  type: string
                newPassword:
                  type: string
            example:
              fName: Ali
              lName: Salehi
              mobile: 09130399222
              telephone: 02536662323
              address: azadi .st
              zipCode: 25
              birthdate: "1990-07-05T20:30:00.000Z"
              currentPassword: a111111
              newPassword: a333333
      responses:
        "200":
          description: |-
            OK
        "403":
          description: |-
            currentPassword is not correct.

  /payment/deposit:
    post:
      tags:
        - Payment
      operationId: postPeymentV1
      summary: returns bank terminal URL
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  summary: amount of money which user wants to deposit (in Rials), should be at least 10000
            example:
              amount: 10000
      responses:
        "200":
          description: |-
            OK
          content:
            application/json:
              examples:
                example1:
                  value:
                    {
                      "url": "https://bpm.shaparak.ir/pgwchannel/startpay.mellat?RefId=A5141D19DAF64F96"
                    }
        "400":
          description: |-
            Bad request. "amount" property is required

  /ticket:
    get:
      tags:
        - Ticketing
      operationId: getAllTicketsV1
      summary: returns all user tickets
      security:
        - jwtAuth: []
      responses:
        "200":
          description: |-
            OK
          content:
            application/json:
              examples:
                example1:
                  value:
                    [
                      {
                        "_id": "5de6aae019e4c13034af050d",
                        "title": "تیکت 1",
                        "application": "rayan_web",
                        "priority": 0,
                        "status": 1,
                        "user":
                          {
                            "_id": "5cea9a1f69ceb503e8358119",
                            "username": "rayan",
                          },
                        "number": 1003,
                        "__v": 0,
                      },
                      {
                        "_id": "5de6a15719e4c13034af050b",
                        "title": "تیکت 2",
                        "car": "5c49eb7586900f14686e85a7",
                        "application": "rayan_web",
                        "priority": 0,
                        "status": 0,
                        "user":
                          {
                            "_id": "5cea9a1f69ceb503e8358119",
                            "username": "rayan",
                          },
                        "number": 1002,
                        "__v": 0,
                      },
                    ]
        "404":
          description: |-
            404 Not found any ticket

  /ticket/{ticketId}:
    get:
      tags:
        - Ticketing
      operationId: getTicketV1
      summary: returns specified ticket
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: ticketId
          required: true
          schema:
            $ref: "#/components/schemas/general/properties/objectId"
          description: The ticket ID
      responses:
        "200":
          description: |-
            OK
          content:
            application/json:
              examples:
                example1:
                  value:
                    {
                      "_id": "5de6aae019e4c13034af050d",
                      "title": "تیکت 1",
                      "application": "rayan_web",
                      "priority": 0,
                      "status": 1,
                      "user":
                        {
                          "_id": "5cea9a1f69ceb503e8358119",
                          "username": "rayan",
                        },
                      "number": 1003,
                      "__v": 0,
                    }
        "404":
          description: |-
            404 Ticket not found (For specified user)
    put: # --- API ---
      tags:
        - Ticketing
      operationId: closeTicketV1
      summary: Changes ticket status to close
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: ticketId
          required: true
          schema:
            $ref: "#/components/schemas/general/properties/objectId"
          description: The ticket ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                closeTicket:
                  type: boolean
            example:
              closeTicket: true
      responses:
        "200":
          description: |-
            OK
        "404":
          description: |-
            404 Ticket not found (For specified user)

  /ticket/new:
    post:
      tags:
        - Ticketing
      operationId: newTicketV1
      summary: Inserts new ticket
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
                priority:
                  $ref: "#/components/schemas/ticket/properties/priorities"
                application:
                  $ref: "#/components/schemas/general/properties/application_type"
                car:
                  $ref: "#/components/schemas/general/properties/objectId"
                text:
                  type: string
            example:
              title: عنوان تیکت/موضوع تیکت'
              priority: 0
              application: rayan_android
              car: 5db6a6383612da23a4e76a4e
              text: متن توضیحات تیکت
      responses:
        "200":
          description: |-
            OK
        "400":
          description: |-
            Bad request
  /ticket/newMessage:
    post:
      tags:
        - Ticketing
      operationId: newMessageV1
      summary: Inserts new ticket message
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ticketId:
                  $ref: "#/components/schemas/general/properties/objectId"
                text:
                  type: string
            example:
              ticketId: 5db6a6383612da23a4e76a4e
              text: متن توضیحات پیام
      responses:
        "200":
          description: |-
            OK
        "404":
          description: |-
            Ticket not found
        "400":
          description: |-
            Bad request

components:
  schemas:
    general:
      title: General
      type: object
      properties:
        application_type:
          type: string
          enum: [rayan_web, rayan_android]
          required: true
        objectId:
          type: string
          minimum: 24
          maximum: 24
    ticket:
      title: Ticket enums
      type: object
      properties:
        status:
          type: number
          enum: [0, 1, 2]
          required: true
          description: "0: userRespone (درحال بررسی) <br/> 1: operatorRespone (پاسخ داده شده) <br/> 3: closed (بسته شده)"
        priorities:
          type: number
          enum: [0, 1, 2]
          required: true
          description: "0: low (کم) <br/> 1: medium (متوسط) <br/> 3: high (زیاد)"



  /report/hourly:
    post:
      tags:
        - Report
      operationId: getReportv1
      summary: returns report data in hour/day/month
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: number
                  enum: [1, 2, 3]
                  description: "1: hourly (ساعتی) <br/> 2: daily (روزانه) <br/> 3: monthly (ماهانه)"
            example:
              type: 2
              car: 5ca1c5171616cd086c10957b
              endDate: 2020-10-25T20:29:59.999Z
              startDate: 2020-10-22T20:30:00.000Z
      responses:
        "200":
          description: |-
            OK
          content:
            application/json:
              examples:
                example1:
                  value:
                    {
                      "avgSpeed": 9.695652173913043,
                      "maxSpeed": 79,
                      "totalDistance": 25883,
                      "startDate": {
                        "year": 2020,
                        "day": 23,
                        "month": 10
                      },
                      "totalStatus": {
                        "stop": 11472,
                        "move": 91,
                        "start": 25,
                        "off": 25
                      }
                    }   
  securitySchemes:
    jwtAuth:
      type: apiKey
      in: header
      name: x-auth-token
